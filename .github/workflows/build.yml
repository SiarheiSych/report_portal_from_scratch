name: Build pipeline
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install --force
      # - run: npm run mocha

  sonarcloud:
    needs: [build]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Sonar
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  integration:
    runs-on: ubuntu-latest
    needs: [init, build, sonarcloud]
    if: always() && ${{needs.*.result == 'success'}}
    steps:
      - uses: skitionek/notify-microsoft-teams@master
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          overwrite: "{title: 'Pipeline finished success'}"
            job: ${{ toJson(job) }}
            steps: ${{ toJson(steps) }}
            needs: ${{ toJson(needs) }}
    
         
